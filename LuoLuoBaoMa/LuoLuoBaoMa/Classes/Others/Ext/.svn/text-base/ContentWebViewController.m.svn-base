//
//  ContentWebViewController.m
//  xingzhengbao
//
//  Created by DavyZhang on 16/5/12.
//  Copyright © 2016年 XZB. All rights reserved.
//

#import "ContentWebViewController.h"

#import "NJKWebViewProgress.h"
#import "NJKWebViewProgressView.h"
#import "UIColor+WHE.h"
#import "UIButton+WHE.h"
#import "UIImage+Helper.h"
#import "IOSMD5.h"

#import "TKContactsMultiPickerController.h"

#import "BaseNavigationController.h"

@interface ContentWebViewController ()<UIWebViewDelegate,NJKWebViewProgressDelegate,UIActionSheetDelegate>{

    BOOL IsNeedActionSheet; // 是否需要展示ActionSheet
}
@property (strong, nonatomic) UIWebView * webView;
@property (nonatomic,strong) NJKWebViewProgressView *progressView;
@property (nonatomic,strong) NJKWebViewProgress *progressProxy;
@property (nonatomic,strong) NSString *tempURL;

@property(nonatomic,strong) UIRefreshControl *control; // 刷新

@end

@implementation ContentWebViewController

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self.navigationController.navigationBar addSubview:self.progressView];
}

-(void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    
    // Remove progress view
    // because UINavigationBar is shared with other ViewControllers
    [self.progressView removeFromSuperview];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    MLog(@" webNavgiation %@ ",self.navigationController);
    self.progressProxy = [[NJKWebViewProgress alloc] init];
    self.webView.delegate = self.progressProxy;
    self.progressProxy.webViewProxyDelegate = self;
    self.progressProxy.progressDelegate = self;
    
    CGFloat progressBarHeight = 3.f;
    CGRect navigationBarBounds = self.navigationController.navigationBar.bounds;
    CGRect barFrame = CGRectMake(0, navigationBarBounds.size.height - progressBarHeight, navigationBarBounds.size.width, progressBarHeight);
    self.progressView = [[NJKWebViewProgressView alloc] initWithFrame:barFrame];
    self.progressView.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleTopMargin;
    self.progressView.progressBarView.backgroundColor = kButton_COLOR;
    if (self.loadingBarTintColor) {
        self.progressView.progressBarView.backgroundColor = self.loadingBarTintColor;
    }
    
    if (self.bgcolor) {
        [self.view setBackgroundColor:[UIColor colorFromHexString:self.bgcolor]];
        [self.webView setBackgroundColor:[UIColor colorFromHexString:self.bgcolor]];
    }else{
        [self.view setBackgroundColor:[UIColor colorFromHexString:@"f4f4f4"]];
        [self.webView setBackgroundColor:[UIColor colorFromHexString:@"f4f4f4"]];
    }
    [self.view addSubview:self.webView];
    [self loadURL];
    
    [self setupLeftNavigationBarBtnWithHiddenOneBtn];
    IsNeedActionSheet = YES;
    
    
    // 写入 userAgent web判断
//    UIWebView* webView = [[UIWebView alloc] initWithFrame:CGRectZero];
//    NSString* secretAgent = [self.webView stringByEvaluatingJavaScriptFromString:@"navigator.userAgent"];
    NSString *newUagent = [NSString stringWithFormat:@"%@",kkey4CookieName_userAgent];
    NSDictionary *dictionary = [[NSDictionary alloc]
                                initWithObjectsAndKeys:newUagent, @"UserAgent", nil];
    [[NSUserDefaults standardUserDefaults] registerDefaults:dictionary];
    
    // 添加刷新
    [self setupRefresh];
}
// 添加下拉刷新
- (void)setupRefresh{
    self.control=[[UIRefreshControl alloc]init];
    [self.control addTarget:self action:@selector(refreshStateChange:) forControlEvents:UIControlEventValueChanged];
    [self.webView.scrollView addSubview:self.control];
}
-(void)refreshStateChange:(UIRefreshControl *)control
{
    [self.webView reload];
}

-(void)setUrl:(NSString *)url{
    _url = url; 
//    MLog(@" 企业管理  %@",_url);
}

-(void)loadURL
{
    
//    [self RequestWithSetCookie:self.url];
    //PRODUCT_INFO_URL
    NSURLRequest *req = [[NSURLRequest alloc] initWithURL:[NSURL URLWithString:self.url]];
    [self.webView loadRequest:req];
}
// 添加cookie
- (void)RequestWithSetCookie:(NSString *)URL{
    //定义cookie要设设定的host
//    NSString *MD5Str = [IOSMD5 MD5:[NSString stringWithFormat:@"%@%@",URL,kEncryptKey4WebView]];
    NSURL*requestURL=[NSURL URLWithString:URL];
    // 設定 cookie
    NSHTTPCookie *cookie = [NSHTTPCookie cookieWithProperties:[NSDictionary dictionaryWithObjectsAndKeys:[requestURL host],NSHTTPCookieDomain,[requestURL path],NSHTTPCookiePath, kkey4CookieName_userAgent,NSHTTPCookieName,[IOSMD5 MD5:[NSString stringWithFormat:@"%@/%@",URL,kEncryptKey4WebView]],NSHTTPCookieValue, nil]];
    // 設定 cookie 到 storage 中
    [[NSHTTPCookieStorage sharedHTTPCookieStorage] setCookie:cookie];
}

#pragma mark - NJKWebViewProgressDelegate
-(void)webViewProgress:(NJKWebViewProgress *)webViewProgress updateProgress:(float)progress
{
    [self.progressView setProgress:progress animated:YES];
    // 获取网页的标题
    self.title = [self.webView stringByEvaluatingJavaScriptFromString:@"document.title"];
    
}

- (UIWebView *)webView{
    if (!_webView) {
        _webView = [[UIWebView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, self.view.height-64)];
        BaseNavigationController *baseNav = (BaseNavigationController *)self.navigationController;
        if (baseNav.IsHorizontalShow) {
            _webView.frame = CGRectMake(0, 0, SCREEN_WIDTH, self.view.height-34);
        }
        [_webView setBackgroundColor:[UIColor whiteColor]];
        _webView.delegate =self;
        _webView.scalesPageToFit = YES;
    }
    return _webView;
}

-(void)clickedbackBtn:(UIButton*)btn{
    NSLog(@"content back");
    
        if (self.webView.canGoBack) {
            [self setupLeftNavigationBarBtn];
            [self.webView goBack];
        }else{
            if (self.IsDismissVC) {
                [self dismissViewControllerAnimated:YES completion:nil];
            }else{
                [self.navigationController popViewControllerAnimated:YES];
            }
        }
    
    
}
-(void)clickedcloseBtn:(UIButton*)btn{
    NSLog(@"close");
    if (self.IsDismissVC) {
        [self dismissViewControllerAnimated:YES completion:nil];
    }else{
        [self.navigationController popViewControllerAnimated:YES];
    }
    
}
-(void)setupLeftNavigationBarBtn{
    
    UIView * customView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 108, 44)];
    
    UIButton *backBtn = [UIButton buttonBackWithImage:[[UIImage imageNamed:@"return_back"]resize:3.6] buttontitle:@"返回" target:self action:@selector(clickedbackBtn:) forControlEvents:UIControlEventTouchUpInside];
    [backBtn setTitleColor:[UIColor blackColor] forState:0];
    backBtn.frame = CGRectMake(0, 0, 54, 44);
    [customView addSubview:backBtn];
    
    
    UIButton *closeBtn = [[UIButton alloc] init];
    [closeBtn setTitle:@"关闭" forState:UIControlStateNormal];
    [closeBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [closeBtn setTitleColor:[UIColor grayColor] forState:UIControlStateHighlighted];
    [closeBtn addTarget:self action:@selector(clickedcloseBtn:) forControlEvents:UIControlEventTouchUpInside];
    closeBtn.frame = CGRectMake(48, 0, 54, 44);
    [closeBtn.titleLabel setFont:[UIFont systemFontOfSize:16]];
    [customView addSubview:closeBtn];
    
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:customView];
    
}

-(void)setupLeftNavigationBarBtnWithHiddenOneBtn{
    
    //     self.navigationController.interactivePopGestureRecognizer.enabled = YES;
    id target = self.navigationController.interactivePopGestureRecognizer.delegate;
    // 创建全屏滑动手势，调用系统自带滑动手势的target的action方法
    UIPanGestureRecognizer *pan = [[UIPanGestureRecognizer alloc] initWithTarget:target action:@selector(handleNavigationTransition:)];
    // handleNavigationTransition   系统的方法
    // 设置手势代理，拦截手势触发
    pan.delegate = self;
    // 给导航控制器的view添加全屏滑动手势
    [self.view addGestureRecognizer:pan];
    // 禁止使用系统自带的滑动手势
    self.navigationController.interactivePopGestureRecognizer.enabled = YES;
    
    UIView * customView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 54, 44)];
    
    UIButton *backBtn = [UIButton buttonBackWithImage:[[UIImage imageNamed:@"return_back"]resize:3.6] buttontitle:@"返回" target:self action:@selector(clickedbackBtn:) forControlEvents:UIControlEventTouchUpInside];
    backBtn.frame = CGRectMake(0, 0, 54, 44);
    [backBtn setTitleColor:[UIColor blackColor] forState:0];
    [customView addSubview:backBtn];
    
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:customView];
    
}

#pragma mark - webView Delegate

-(void)webViewDidStartLoad:(UIWebView *)webView{
    //显示网络请求加载
    [UIApplication sharedApplication].networkActivityIndicatorVisible=true;
}

-(void)webViewDidFinishLoad:(UIWebView *)webView{
    //隐藏网络请求加载图标
    [UIApplication sharedApplication].networkActivityIndicatorVisible=false;
    [self.control endRefreshing];
}
- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType{
    self.navigationItem.rightBarButtonItem = nil;
    //webview 内部超链接点击跳转
    NSString *urlString = request.URL.absoluteString==nil?@"":request.URL.absoluteString;
    MLog(@" urlString  %@",urlString);
    
    if ([urlString rangeOfString:kString4OpenContacts].location !=NSNotFound){//跳转联系人界面
        // 跳转添加联系人
        TKContactsMultiPickerController *controller = [[TKContactsMultiPickerController alloc] initWithNibName:@"TKContactsMultiPickerController" bundle:nil];
        //        controller.delegate = self;
        [self.navigationController pushViewController:controller animated:YES];
        return NO;
    }else if ([urlString rangeOfString:kString4LogOut].location !=NSNotFound){
        // 退出登录
        [[NSNotificationCenter defaultCenter] postNotificationName:NT_LogOut object:nil];
        return NO;
    }else if([urlString rangeOfString:kString4DeviceHorizontalShow].location !=NSNotFound){// 横竖屏显示
//        IsHorizontal: 1 -> 横屏显示  ；  2 –> 竖屏显示
        NSString *pmsStr = [[urlString componentsSeparatedByString:@"?"] objectAtIndex:1];
        
        NSArray *pmsList = [pmsStr componentsSeparatedByString:@"&"];
        NSString *requestURL = [[[pmsList objectAtIndex:0] componentsSeparatedByString:@"="]objectAtIndex:1];
        int IsHorizontal = [[[[pmsList objectAtIndex:1] componentsSeparatedByString:@"="]objectAtIndex:1]intValue];
        
        ContentWebViewController *content = [[ContentWebViewController alloc]init];
        content.url = requestURL;
        content.loadingBarTintColor = kButton_COLOR;
        if (IsHorizontal==1) {
            BaseNavigationController *nav = [[BaseNavigationController alloc]initWithRootViewController:content];
            nav.IsHorizontalShow = YES;
            [self presentViewController:nav animated:YES completion:^{
                content.IsDismissVC = YES;
            }];  //此处需要注意的是不能用push方法，只能用present来展示
        }else if(IsHorizontal==2){
            [self.navigationController pushViewController:content animated:YES];
           
        }
        
        return NO;
        
    }else if([urlString rangeOfString:kString4GoBack].location !=NSNotFound){ // 返回上一页
        [self clickedbackBtn:nil]; // 返回按钮
//         [self refreshStateChange:nil];
        return NO;
        
    }else if ([urlString rangeOfString:kString4ShowCreateBtn].location !=NSNotFound){//添加button
        // 导航条添加按钮
        NSString *pmsStr = [[urlString componentsSeparatedByString:@"?"] objectAtIndex:1];
        NSArray *pmsList = [pmsStr componentsSeparatedByString:@"&"];
        NSString *requestURL = [[[pmsList objectAtIndex:0] componentsSeparatedByString:@"="]objectAtIndex:1];
        NSString *btnName = [[[pmsList objectAtIndex:1] componentsSeparatedByString:@"="]objectAtIndex:1];
         btnName = [btnName stringByReplacingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
        IsNeedActionSheet = [[[[pmsList objectAtIndex:2] componentsSeparatedByString:@"="]objectAtIndex:1] intValue]==0?NO:YES; // isMore
        [self setNavigationRightWithStr:btnName];
        _tempURL = requestURL;
        
        return YES;
    }else if (navigationType==UIWebViewNavigationTypeLinkClicked) {
    
//        ContentWebViewController *content = [[ContentWebViewController alloc]init];
//        content.url = urlString;
//        content.loadingBarTintColor = kButton_COLOR;
//        [self.navigationController pushViewController:content animated:YES];
        MLog(@"超链接跳转 ");
        return YES;
    }
    return YES;
}
- (void)NavigationBarButtonClick:(UIButton *)sender{
    if (IsNeedActionSheet) {
        UIActionSheet *actionSheet=[[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:@"取消" destructiveButtonTitle:nil otherButtonTitles:@"手动添加",@"通讯录导入", nil];
        actionSheet.actionSheetStyle=UIBarStyleDefault;
        [actionSheet showInView:self.view];
    }else{
        ContentWebViewController *content = [[ContentWebViewController alloc]init];
        content.url = _tempURL;
        content.loadingBarTintColor = kButton_COLOR;
        [self.navigationController pushViewController:content animated:YES];return;
//        [self.webView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:_tempURL]]];
    }
}

#pragma mark - UIActionSheetDelegate
- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    switch (buttonIndex) {
        case 0:{
            MLog(@" 手动 ");
            ContentWebViewController *content = [[ContentWebViewController alloc]init];
            content.url = _tempURL;
            content.loadingBarTintColor = kButton_COLOR;
            [self.navigationController pushViewController:content animated:YES];return;
            
//            BaseNavigationController *nav = [[BaseNavigationController alloc]initWithRootViewController:content];
//            nav.IsHorizontalShow = YES;
//            [self presentViewController:nav animated:YES completion:^{
//                content.IsDismissVC = YES;
//            }];  //此处需要注意的是不能用push方法，只能用present来展示
            [self.webView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:_tempURL]]];
        }
            break;
        case 1:{
            MLog(@" 通讯录导入 ");
            // 跳转添加联系人
            TKContactsMultiPickerController *controller = [[TKContactsMultiPickerController alloc] initWithNibName:@"TKContactsMultiPickerController" bundle:nil];
            //        controller.delegate = self;
            controller.IsHideSkipButton = YES;
            [self.navigationController pushViewController:controller animated:YES];return;}
            break;
        case 2:
            MLog(@" 取消 ");
            break;
            
        default:
            break;
    }
}

#pragma mark - 强制横屏
-(UIInterfaceOrientation)preferredInterfaceOrientationForPresentation{
    
    return  UIInterfaceOrientationLandscapeRight;
    
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
